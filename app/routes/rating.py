from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from app.database.db import get_db
from app.models.user import User
from app.models.hero import UserHeroProgress
from app.schemas.rating import RatingUser
from app.routes.auth import get_current_user  # ‚úÖ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç

router = APIRouter(prefix="/rating", tags=["Rating"])  # ‚úÖ —Ç–µ–ø–µ—Ä—å –≤—Å–µ –ø—É—Ç–∏ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å /rating

@router.get("/", response_model=list[RatingUser])
def get_top_users(
    db: Session = Depends(get_db),
    current_user: User = Depends(get_current_user)
):
    try:
        results = (
            db.query(User.id, User.name, UserHeroProgress.xp)
            .join(UserHeroProgress, User.id == UserHeroProgress.user_id)
            .order_by(UserHeroProgress.xp.desc())
            .limit(10)
            .all()
        )

        # –ï—Å–ª–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, XP —Å—Ç–∞–≤–∏–º –≤ 0
        return [
            {"user_id": uid, "username": name or "–ê–Ω–æ–Ω–∏–º", "xp": xp or 0}
            for uid, name, xp in results
        ]
    except Exception as e:
        print("üî• –û—à–∏–±–∫–∞ –≤ get_top_users:", e)
        raise HTTPException(status_code=500, detail="–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–π—Ç–∏–Ω–≥–∞")
