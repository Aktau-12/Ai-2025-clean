from fastapi import APIRouter, Depends, HTTPException
from sqlalchemy.orm import Session
from passlib.context import CryptContext
from app.database.db import SessionLocal
from app.models.user import User
from app.models.hero import UserHeroProgress
from app.routes.auth import get_current_user
from app.schemas.user import UserCreate, UserResponse  # üëà –∏–º–ø–æ—Ä—Ç —Å—Ö–µ–º

router = APIRouter()
pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")


# üîå –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –ë–î
def get_db():
    db = SessionLocal()
    try:
        yield db
    finally:
        db.close()


# üîí –•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è
def hash_password(password: str):
    return pwd_context.hash(password)


# ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –≥–µ—Ä–æ—è
@router.post("/register", response_model=dict)
def register_user(user_data: UserCreate, db: Session = Depends(get_db)):
    if db.query(User).filter(User.email == user_data.email).first():
        raise HTTPException(status_code=400, detail="‚õî –≠—Ç–æ—Ç email —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω")

    hashed_password = hash_password(user_data.password)
    user = User(
        email=user_data.email,
        name=user_data.name,
        password_hash=hashed_password
    )
    db.add(user)
    db.commit()
    db.refresh(user)

    # ‚úÖ –°–æ–∑–¥–∞—ë–º –ø—Ä–æ–≥—Ä–µ—Å—Å –≥–µ—Ä–æ—è
    progress = UserHeroProgress(user_id=user.id, xp=0)
    db.add(progress)
    db.commit()

    return {
        "message": "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!",
        "user_id": user.id
    }


# üë§ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@router.get("/me", response_model=UserResponse)
def get_user_me(user: User = Depends(get_current_user)):
    xp = user.hero_progress.xp if user.hero_progress else 0
    return {
        "email": user.email,
        "name": user.name,
        "id": user.id,
        "xp": xp,
        "mbti_type": user.mbti_type  # ‚úÖ MBTI —Ç–∏–ø –≤–∫–ª—é—á—ë–Ω
    }
