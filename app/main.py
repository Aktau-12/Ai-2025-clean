from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from dotenv import load_dotenv
from pathlib import Path
import os

# üîÑ –¢–æ–ª—å–∫–æ –≤ –ø—Ä–æ–¥–µ (Render) ‚Äî –∑–∞–ø—É—Å–∫–∞–µ–º alembic upgrade
if os.getenv("RENDER") == "true":
    import subprocess
    print("‚öôÔ∏è –í—ã–ø–æ–ª–Ω—è–µ–º alembic upgrade head (Render)...")
    subprocess.run(["alembic", "upgrade", "head"])

# ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º .env –ª–æ–∫–∞–ª—å–Ω–æ (–Ω–∞ Render —ç—Ç–æ –Ω–µ –Ω—É–∂–Ω–æ)
if os.getenv("RENDER") is None:
    load_dotenv(Path(__file__).resolve().parent / ".env")

# üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI
print("‚úÖ MAIN.PY –ó–ê–ü–£–©–ï–ù")
app = FastAPI(
    title="AI Profiler",
    description="üß† –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Å—Ç–æ–≤, —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏—è –∏ AI-–ø–æ–º–æ—â–∏",
    version="1.0.0",
)

# üåê CORS
origins = [
    "https://ai-2025-clean-1.onrender.com",
    "https://ai-2025-clean.onrender.com",
    "http://localhost:5173",
]

app.add_middleware(
    CORSMiddleware,
    allow_origins=origins,
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# üîó –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–æ–≤
from app.routes import auth, user, test, coretalents, mbti, hero, rating, habit

# üìå –ü–æ–¥–∫–ª—é—á–∞–µ–º —Ä–æ—É—Ç–µ—Ä—ã
app.include_router(auth.router, prefix="/auth", tags=["Auth"])
app.include_router(user.router, prefix="/users", tags=["Users"])
app.include_router(test.router, prefix="/tests", tags=["Tests"])
app.include_router(coretalents.router, prefix="/coretalents", tags=["CoreTalents"])
app.include_router(mbti.router, prefix="/mbti", tags=["MBTI"])
app.include_router(hero.router, prefix="/hero", tags=["Hero"])
app.include_router(rating.router, prefix="/rating", tags=["Rating"])
app.include_router(habit.router, prefix="/habits", tags=["Habits"])

@app.get("/")
def root():
    return {"message": "‚úÖ AI Profiler —Ä–∞–±–æ—Ç–∞–µ—Ç!"}
