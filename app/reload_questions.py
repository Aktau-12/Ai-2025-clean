import json
from sqlalchemy.orm import Session
from app.database.db import SessionLocal  # ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç
from app.models.test import Test, Question  # ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç

# üîß –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏
import os
file_path = os.path.join(os.path.dirname(__file__), "data", "coretalents_questions_fixed.json")

# üîÑ –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
db: Session = SessionLocal()

# ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ—Å—Ç —Å id = 1 (CoreTalents 34) —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
test = db.query(Test).filter(Test.id == 1).first()
if not test:
    raise Exception("‚ùå –¢–µ—Å—Ç —Å id=1 (CoreTalents 34) –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ!")

# üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Ç–æ–ª—å–∫–æ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞
print("üßπ –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ç–µ—Å—Ç–∞ 'CoreTalents 34'...")
db.query(Question).filter(Question.test_id == 1).delete()
db.commit()
print("‚úÖ –°—Ç–∞—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã —É–¥–∞–ª–µ–Ω—ã.")

# üì• –ó–∞–≥—Ä—É–∂–∞–µ–º JSON-—Ñ–∞–π–ª
try:
    with open(file_path, "r", encoding="utf-8") as f:
        questions = json.load(f)
except Exception as e:
    raise Exception(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ {file_path}: {e}")

# ‚ûï –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã
added_count = 0
for i, q in enumerate(questions, start=1):
    if "question_a" in q and "question_b" in q:
        question_text = q["question_a"] + " / " + q["question_b"]
        question = Question(
            id=i,               # üëà –≤—Ä—É—á–Ω—É—é –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º ID (–µ—Å–ª–∏ –∞–≤—Ç–æ–∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è)
            test_id=1,
            text=question_text
        )
        db.add(question)
        added_count += 1
    else:
        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –≤–æ–ø—Ä–æ—Å –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –ø–æ–ª–µ–π: {q}")

db.commit()
db.close()
print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {added_count} –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è 'CoreTalents 34'.")
