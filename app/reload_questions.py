import json
from sqlalchemy.orm import Session
from app.database.db import SessionLocal
from app.models.coretalents import CoreQuestion  # ‚úÖ –ú–æ–¥–µ–ª—å core_questions

# üîß –ü—É—Ç—å –∫ JSON-—Ñ–∞–π–ª—É
import os
file_path = os.path.join(os.path.dirname(__file__), "data", "coretalents_questions_fixed.json")

# üîÑ –°–µ—Å—Å–∏—è
db: Session = SessionLocal()

# üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã
print("üßπ –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–∑ core_questions...")
db.query(CoreQuestion).delete()
db.commit()
print("‚úÖ –°—Ç–∞—Ä—ã–µ –≤–æ–ø—Ä–æ—Å—ã —É–¥–∞–ª–µ–Ω—ã.")

# üì• –ó–∞–≥—Ä—É–∂–∞–µ–º JSON
try:
    with open(file_path, "r", encoding="utf-8") as f:
        questions = json.load(f)
except Exception as e:
    raise Exception(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

# ‚ûï –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ
added = 0
for q in questions:
    if "question_a" in q and "question_b" in q and "position" in q:
        new_q = CoreQuestion(
            question_a=q["question_a"],
            question_b=q["question_b"],
            position=q["position"]
        )
        db.add(new_q)
        added += 1
    else:
        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω –≤–æ–ø—Ä–æ—Å: {q}")

db.commit()
db.close()
print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {added} –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ core_questions.")
