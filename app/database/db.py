import os
from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import sessionmaker, Session
from dotenv import load_dotenv
from pathlib import Path

# üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º .env —Ç–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω–æ (–Ω–∞ Render –≤—Å—ë –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
if os.getenv("RENDER") is None:
    load_dotenv(Path(__file__).resolve().parent.parent / ".env")

# ‚úÖ –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
SQLALCHEMY_DATABASE_URL = os.getenv("DATABASE_URL")

# ‚õî –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ‚Äî –±—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É (—á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ —Å—é—Ä–ø—Ä–∏–∑–æ–≤)
if not SQLALCHEMY_DATABASE_URL:
    raise RuntimeError("‚ùå DATABASE_URL –Ω–µ –∑–∞–¥–∞–Ω. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç.")

# üîß SQLAlchemy engine + —Å–µ—Å—Å–∏—è
engine = create_engine(SQLALCHEMY_DATABASE_URL)
SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)
Base = declarative_base()

# ‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å FastAPI
def get_db():
    db: Session = SessionLocal()
    try:
        yield db
    finally:
        db.close()
