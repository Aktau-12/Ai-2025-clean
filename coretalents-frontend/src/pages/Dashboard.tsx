import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import HeroPath from "../components/HeroPath";
import Ranking from "../components/Ranking";
import HeroProfessions from "../components/HeroProfessions";
import HabitTracker from "./HabitTracker";
import ThinkingAlgorithm from "../components/ThinkingAlgorithm";
import LifeWheel from "../components/LifeWheel";

const API_URL = import.meta.env.VITE_API_URL;

export default function Dashboard() {
  const [email, setEmail] = useState("");
  const [name, setName] = useState("");
  const [mbtiType, setMbtiType] = useState<string | null>(null);
  const [results, setResults] = useState<any[]>([]);
  const [tab, setTab] = useState("menu");
  const navigate = useNavigate();

  useEffect(() => {
    const token = localStorage.getItem("token");
    if (!token) {
      navigate("/login");
      return;
    }

    fetch(`${API_URL}/users/me`, {
      headers: { Authorization: `Bearer ${token}` },
    })
      .then(async (res) => {
        if (!res.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
        const data = await res.json();
        setEmail(data.email);
        setName(data.name || data.email);
        setMbtiType(data.mbti_type || null);
      })
      .catch(() => {
        localStorage.removeItem("token");
        navigate("/login");
      });

    fetch(`${API_URL}/tests/my-results`, {
      headers: { Authorization: `Bearer ${token}` },
    })
      .then(async (res) => {
        if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤");
        const data = await res.json();
        setResults(data);
      })
      .catch((err) => {
        console.error(err);
      });
  }, [navigate]);

  const tabs = [
    { key: "tests", label: "üí° –ú–æ–∏ —Ç–µ—Å—Ç—ã" },
    { key: "results", label: "üìà –†–µ–∑—É–ª—å—Ç–∞—Ç—ã" },
    { key: "hero", label: "üóÆÔ∏è –ü—É—Ç—å –≥–µ—Ä–æ—è" },
    { key: "mentor", label: "üßô‚Äç‚ôÇÔ∏è AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫" },
    { key: "professions", label: "üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏" },
    { key: "ranking", label: "üèÜ –†–µ–π—Ç–∏–Ω–≥" },
    { key: "habits", label: "üîÑ –ü—Ä–∏–≤—ã—á–∫–∏" },
    { key: "thinking", label: "üí° –ê–ª–≥–æ—Ä–∏—Ç–º –º—ã—à–ª–µ–Ω–∏—è" },
    { key: "lifewheel", label: "üìà –ö–æ–ª–µ—Å–æ –∂–∏–∑–Ω–∏" },
  ];

  return (
    <div className="min-h-screen bg-gray-100 py-10 px-6">
      <div className="max-w-6xl mx-auto">
        <h1 className="text-4xl font-bold text-center text-blue-800 mb-2">
          –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–æ–µ–∫—Ç-–Ø, {name || email}!
        </h1>
        {email && (
          <p className="text-center text-gray-600 mb-8">
            –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ <strong>{email}</strong>
          </p>
        )}

        {tab === "menu" && (
          <div className="grid gap-8 sm:grid-cols-2 md:grid-cols-3">
            {tabs.map((t) => (
              <button
                key={t.key}
                onClick={() => setTab(t.key)}
                className="bg-white rounded-2xl p-6 shadow-lg flex flex-col items-center text-center transition-transform transform hover:scale-105 hover:bg-blue-50"
              >
                <span className="text-3xl mb-4">{t.label}</span>
                <span className="text-sm text-gray-500">
                  {t.key === "tests"
                    ? "–ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç—ã"
                    : t.key === "hero"
                    ? "–í–∞—à –ø—É—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è"
                    : t.key === "mentor"
                    ? "AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫"
                    : t.key === "lifewheel"
                    ? "–ö–æ–ª–µ—Å–æ –∂–∏–∑–Ω–∏"
                    : "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ"}
                </span>
              </button>
            ))}
          </div>
        )}

        {/* –í–∫–ª–∞–¥–∫–∞ "–ú–æ–∏ —Ç–µ—Å—Ç—ã" */}
        {tab === "tests" && (
          <div className="space-y-4 mt-8 flex flex-col items-center">
            <button onClick={() => navigate("/coretalents")} className="btn-primary">
              CoreTalents 34
            </button>
            <button onClick={() => navigate("/bigfive")} className="btn-primary">
              Big Five
            </button>
            <button onClick={() => navigate("/mbti")} className="btn-primary">
              MBTI
            </button>
            <button onClick={() => setTab("menu")} className="btn-outline">
              üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}

        {/* –í–∫–ª–∞–¥–∫–∞ "–†–µ–∑—É–ª—å—Ç–∞—Ç—ã" */}
        {tab === "results" && (
          <div className="space-y-4 mt-8">
            {mbtiType && (
              <div className="flex items-center justify-center gap-4">
                <img
                  src={`/mbti-avatars/${mbtiType}.png`}
                  alt={mbtiType}
                  className="w-12 h-12 rounded-full border"
                />
                <p className="text-blue-700 font-semibold">
                  –í–∞—à MBTI —Ç–∏–ø: {mbtiType}
                </p>
              </div>
            )}
            <h3 className="font-semibold">–ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:</h3>
            {results.map((res, idx) => (
              <div key={idx} className="bg-white p-4 rounded-xl shadow">
                <p className="text-sm font-medium">
                  üß™ {res.test_name} ‚Äî {new Date(res.completed_at).toLocaleString()}
                </p>
                {res.summary && (
                  <p className="text-sm text-gray-700 mt-1">{res.summary}</p>
                )}

                {res.test_name === "CoreTalents 34" && (
                  <button
                    onClick={() => navigate("/coretalents-results")}
                    className="btn-primary mt-2"
                  >
                    üîé –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ 34 —Ç–∞–ª–∞–Ω—Ç–∞
                  </button>
                )}

                {res.test_name === "Big Five" && (
                  <button
                    onClick={() => navigate("/bigfive-results")}
                    className="btn-primary mt-2"
                  >
                    üîé –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã Big Five
                  </button>
                )}

                {res.test_name === "MBTI" && (
                  <button
                    onClick={() => navigate("/mbti-results")}
                    className="btn-primary mt-2"
                  >
                    üîé –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã MBTI
                  </button>
                )}
              </div>
            ))}
            <button onClick={() => setTab("menu")} className="btn-outline">
              üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}

        {/* –í–∫–ª–∞–¥–∫–∞ "–ü—É—Ç—å –≥–µ—Ä–æ—è" */}
        {tab === "hero" && (
          <div className="mt-8">
            <HeroPath />
            <button onClick={() => setTab("menu")} className="btn-outline mt-4">
              üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}

        {/* ... –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–∫–ª–∞–¥–∫–∏ ... */}

        {/* –í–∫–ª–∞–¥–∫–∞ "AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫" */}
        {tab === "mentor" && (
          <div className="space-y-2 text-center mt-8">
            <p>üéì –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</p>
            <ul className="list-disc list-inside text-left inline-block">
              <li>–ó–∞–ø–∏—Å—ã–≤–∞–π –∏–¥–µ–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.</li>
              <li>–°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –æ–¥–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ —Ö–æ—Ç—è –±—ã –Ω–∞ –Ω–µ–¥–µ–ª—é.</li>
              <li>–°–¥–µ–ª–∞–π –ø–µ—Ä–≤—ã–µ 3 —à–∞–≥–∞ ‚Äî —ç—Ç–æ –∑–∞–ª–æ–∂–∏—Ç —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç.</li>
            </ul>
            <button onClick={() => setTab("menu")} className="btn-outline mt-4">
              üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}

        {/* –í–∫–ª–∞–¥–∫–∞ "–ü—Ä–æ—Ñ–µ—Å—Å–∏–∏" */}
        {tab === "professions" && (
          <div className="mt-8">
            <HeroProfessions />
            <button onClick={() => setTab("menu")} className="btn-outline mt-4">
              üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}

        {/* –í–∫–ª–∞–¥–∫–∞ "–†–µ–π—Ç–∏–Ω–≥" */}
        {tab === "ranking" && (
          <div className="mt-8">
            <Ranking />
            <button onClick={() => setTab("menu")} className="btn-outline mt-4">
              üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}

        {/* –í–∫–ª–∞–¥–∫–∞ "–ü—Ä–∏–≤—ã—á–∫–∏" */}
        {tab === "habits" && (
          <div className="mt-8">
            <HabitTracker />
            <button onClick={() => setTab("menu")} className="btn-outline mt-4">
              üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}

        {/* –í–∫–ª–∞–¥–∫–∞ "–ê–ª–≥–æ—Ä–∏—Ç–º –º—ã—à–ª–µ–Ω–∏—è" */}
        {tab === "thinking" && (
          <div className="mt-8">
            <ThinkingAlgorithm />
            <button onClick={() => setTab("menu")} className="btn-outline mt-4">
              üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}

        {/* –í–∫–ª–∞–¥–∫–∞ "–ö–æ–ª–µ—Å–æ –∂–∏–∑–Ω–∏" */}
        {tab === "lifewheel" && (
          <div className="mt-8">
            <LifeWheel />
            <button onClick={() => setTab("menu")} className="btn-outline mt-4">
              üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
            </button>
          </div>
        )}

        {/* –í—ã—Ö–æ–¥ */}
        <div className="text-center pt-12">
          <button
            onClick={() => {
              localStorage.removeItem("token");
              navigate("/login");
            }}
            className="bg-red-500 hover:bg-red-600 text-white font-semibold px-6 py-3 rounded-xl"
          >
            üö™ –í—ã–π—Ç–∏
          </button>
        </div>
      </div>
    </div>
  );
}
