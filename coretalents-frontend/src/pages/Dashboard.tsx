import React, { useEffect, useState } from "react";
import { useNavigate } from "react-router-dom";
import HeroPath from "../components/HeroPath";
import Ranking from "../components/Ranking";
import HeroProfessions from "../components/HeroProfessions";
import HabitTracker from "./HabitTracker";
import ThinkingAlgorithm from "../components/ThinkingAlgorithm";
import LifeWheel from "../components/LifeWheel";

const API_URL = import.meta.env.VITE_API_URL;

export default function Dashboard() {
  const [email, setEmail] = useState("");
  const [name, setName] = useState("");
  const [mbtiType, setMbtiType] = useState<string | null>(null);
  const [results, setResults] = useState<any[]>([]);
  const [tab, setTab] = useState("menu");
  const navigate = useNavigate();

  useEffect(() => {
    const token = localStorage.getItem("token");
    if (!token) {
      navigate("/login");
      return;
    }

    fetch(`${API_URL}/users/me`, {
      headers: { Authorization: `Bearer ${token}` },
    })
      .then(async (res) => {
        if (!res.ok) throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è");
        const data = await res.json();
        setEmail(data.email);
        setName(data.name || data.email);
        setMbtiType(data.mbti_type || null);
      })
      .catch(() => {
        localStorage.removeItem("token");
        navigate("/login");
      });

    fetch(`${API_URL}/tests/my-results`, {
      headers: { Authorization: `Bearer ${token}` },
    })
      .then(async (res) => {
        if (!res.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤");
        const data = await res.json();
        setResults(data);
      })
      .catch((err) => {
        console.error(err);
      });
  }, [navigate]);

  const tabs = [
    { key: "tests", label: "üß† –ú–æ–∏ —Ç–µ—Å—Ç—ã" },
    { key: "results", label: "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã" },
    { key: "hero", label: "üõ§ –ü—É—Ç—å –≥–µ—Ä–æ—è" },
    { key: "mentor", label: "ü§ñ AI‚Äë–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫" },
    { key: "professions", label: "üß≠ –ü—Ä–æ—Ñ–µ—Å—Å–∏–∏" },
    { key: "ranking", label: "üèÜ –†–µ–π—Ç–∏–Ω–≥" },
    { key: "habits", label: "üí° –ü—Ä–∏–≤—ã—á–∫–∏" },
    { key: "thinking", label: "üß† –ê–ª–≥–æ—Ä–∏—Ç–º –º—ã—à–ª–µ–Ω–∏—è" },
    { key: "lifewheel", label: "üìà –ö–æ–ª–µ—Å–æ –∂–∏–∑–Ω–∏" },
  ];

  return (
    <div className="max-w-5xl mx-auto p-6 space-y-6">
      <h1 className="text-3xl font-bold text-center text-blue-800">
        üìä –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü—Ä–æ–µ–∫—Ç-–Ø, {name || email}!
      </h1>
      {email && (
        <p className="text-center text-gray-600">
          –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ <strong>{email}</strong>
        </p>
      )}

      {tab === "menu" && (
        <div className="grid sm:grid-cols-2 md:grid-cols-3 gap-4 mt-6">
          {tabs.map((t) => (
            <button
              key={t.key}
              onClick={() => setTab(t.key)}
              className="bg-white shadow-md rounded-xl p-4 flex flex-col items-center text-center hover:bg-blue-50"
            >
              <span className="text-2xl mb-2">{t.label}</span>
              <span className="text-sm text-gray-500">
                {t.key === "tests"
                  ? "–ü—Ä–æ–π—Ç–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã"
                  : t.key === "hero"
                  ? "–í–∞—à –ø—É—Ç—å —Ä–∞–∑–≤–∏—Ç–∏—è"
                  : t.key === "mentor"
                  ? "AI-–Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ —Å —Å–æ–≤–µ—Ç–∞–º–∏"
                  : t.key === "lifewheel"
                  ? "–û—Ü–µ–Ω–∫–∞ —Å—Ñ–µ—Ä –∂–∏–∑–Ω–∏"
                  : "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å"}
              </span>
            </button>
          ))}
        </div>
      )}

      {tab === "tests" && (
        <div className="space-y-4">
          <button onClick={() => navigate("/coretalents")} className="btn-primary">
            CoreTalents 34
          </button>
          <button onClick={() => navigate("/bigfive")} className="btn-primary">
            Big Five
          </button>
          <button onClick={() => navigate("/mbti")} className="btn-primary">
            MBTI
          </button>
          <button onClick={() => setTab("menu")} className="btn-outline">
            üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}

      {tab === "results" && (
        <div className="space-y-4">
          {mbtiType && (
            <div className="flex items-center justify-center gap-4">
              <img
                src={`/mbti-avatars/${mbtiType}.png`}
                alt={mbtiType}
                className="w-12 h-12 rounded-full border"
              />
              <p className="text-blue-700 font-semibold">üß¨ –í–∞—à MBTI —Ç–∏–ø: {mbtiType}</p>
            </div>
          )}
          <h3 className="font-semibold">üìú –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è:</h3>
          {results.map((res, idx) => (
            <div key={idx} className="bg-gray-100 rounded p-4">
              <p className="text-sm font-medium">
                üß™ {res.test_name} ‚Äî {new Date(res.completed_at).toLocaleString()}
              </p>
              {res.summary && <p className="text-sm text-gray-700 mt-1">{res.summary}</p>}

              {/* üî• –î–æ–±–∞–≤–ª–µ–Ω–æ: –µ—Å–ª–∏ CoreTalents 34 ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ—Ö–æ–¥–∞ */}
              {res.test_name === "CoreTalents 34" && (
                <button
                  onClick={() => navigate("/coretalents-results")}
                  className="btn-primary mt-2"
                >
                  üîé –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ 34 —Ç–∞–ª–∞–Ω—Ç–∞
                </button>
              )}
            </div>
          ))}
          <button onClick={() => setTab("menu")} className="btn-outline">
            üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}

      {tab === "hero" && (
        <div className="space-y-4">
          <HeroPath />
          <button onClick={() => setTab("menu")} className="btn-outline">
            üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}

      {tab === "mentor" && (
        <div className="space-y-2 text-sm">
          <p>üéì –í–æ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</p>
          <ul className="list-disc list-inside space-y-1">
            <li>–ó–∞–ø–∏—Å—ã–≤–∞–π –∏–¥–µ–∏ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å.</li>
            <li>–°—Ñ–æ–∫—É—Å–∏—Ä—É–π—Å—è –Ω–∞ –æ–¥–Ω–æ–º –ø—Ä–æ–µ–∫—Ç–µ —Ö–æ—Ç—è –±—ã –Ω–∞ –Ω–µ–¥–µ–ª—é.</li>
            <li>–°–¥–µ–ª–∞–π –ø–µ—Ä–≤—ã–µ 3 —à–∞–≥–∞ ‚Äî —ç—Ç–æ –∑–∞–ª–æ–∂–∏—Ç —Ñ—É–Ω–¥–∞–º–µ–Ω—Ç.</li>
          </ul>
          <button onClick={() => setTab("menu")} className="btn-outline">
            üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}

      {tab === "professions" && (
        <div>
          <HeroProfessions />
          <button onClick={() => setTab("menu")} className="btn-outline mt-4">
            üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}

      {tab === "ranking" && (
        <div>
          <Ranking />
          <button onClick={() => setTab("menu")} className="btn-outline mt-4">
            üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}

      {tab === "habits" && (
        <div>
          <HabitTracker />
          <button onClick={() => setTab("menu")} className="btn-outline mt-4">
            üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}

      {tab === "thinking" && (
        <div>
          <ThinkingAlgorithm />
          <button onClick={() => setTab("menu")} className="btn-outline mt-4">
            üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}

      {tab === "lifewheel" && (
        <div>
          <LifeWheel />
          <button onClick={() => setTab("menu")} className="btn-outline mt-4">
            üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é
          </button>
        </div>
      )}

      <div className="text-center pt-8">
        <button
          onClick={() => {
            localStorage.removeItem("token");
            navigate("/login");
          }}
          className="bg-red-500 text-white px-4 py-2 rounded"
        >
          üö™ –í—ã–π—Ç–∏
        </button>
      </div>
    </div>
  );
}
