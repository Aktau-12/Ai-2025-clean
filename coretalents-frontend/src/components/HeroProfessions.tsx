import React, { useEffect, useState } from "react";
import axios from "axios";

const API_URL = import.meta.env.VITE_API_URL;

interface Profession {
  name: string;
  original_title: string;
  description: string;
  emoji: string;
}

const HeroProfessions: React.FC = () => {
  const [professions, setProfessions] = useState<Profession[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const fetchProfessions = async () => {
      try {
        const token = localStorage.getItem("token");
        if (!token) throw new Error("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.");

        const response = await axios.get(`${API_URL}/hero/professions`, {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });

        if (!Array.isArray(response.data)) {
          throw new Error("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º.");
        }

        setProfessions(response.data);
      } catch (error: any) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π:", error);
        if (error.response?.data?.detail) {
          setError(error.response.data.detail);
        } else {
          setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ñ–µ—Å—Å–∏–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ.");
        }
      } finally {
        setLoading(false);
      }
    };

    fetchProfessions();
  }, []);

  if (loading) {
    return (
      <div className="p-6 text-center text-gray-500">
        ‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–¥–±–æ—Ä–∫—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–π...
      </div>
    );
  }

  if (error) {
    if (error.includes("–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–ø–æ–ª–Ω—ã–π")) {
      return (
        <div className="p-6 text-center text-red-500 space-y-2">
          üî• –ß—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –ø–æ–¥–±–æ—Ä–∫—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–π, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–π–¥–∏—Ç–µ –≤—Å–µ 3 —Ç–µ—Å—Ç–∞:
          <br />
          <strong>CoreTalents, Big Five –∏ MBTI!</strong>
        </div>
      );
    }
    return (
      <div className="p-6 text-center text-red-500">
        ‚ùå {error}
      </div>
    );
  }

  if (professions.length === 0) {
    return (
      <div className="p-6 text-center text-gray-500">
        üòï –ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.
      </div>
    );
  }

  return (
    <div className="bg-white p-6 rounded-2xl shadow-md">
      <h2 className="text-2xl font-bold mb-6 text-center text-blue-800">
        üéØ –ü–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ—Ñ–µ—Å—Å–∏–∏
      </h2>

      <ul className="space-y-6">
        {professions.map((p) => (
          <li
            key={p.name}
            className="border-l-4 border-blue-500 pl-4 py-2 bg-gray-50 rounded-lg"
          >
            <div className="text-lg font-semibold">
              {p.emoji} {p.name}
            </div>
            <div className="text-sm text-gray-500 italic">{p.original_title}</div>
            <p className="text-sm text-gray-700 mt-1">{p.description}</p>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default HeroProfessions;
